package de.grammarcraft.xtend.annotatedflow

import de.grammarcraft.xtend.flow.annotations.FunctionUnit
import de.grammarcraft.xtend.flow.annotations.InputPort
import de.grammarcraft.xtend.flow.annotations.OutputPort

@FunctionUnit(
    inputPorts = #[
        @InputPort(name="input", type=String)
    ],
    outputPorts = #[
        @OutputPort(name="output", type=String)
    ]
)
class Reverse {
    
    // This method implements the semantic of the function unit      
    override processInput(String msg) {
        output <= [
            val reversedMsgBuilder = new StringBuilder
            var index = msg.length
            while (index > 0) {
                index = index - 1
                reversedMsgBuilder.append(msg.charAt(index))
            }
            reversedMsgBuilder.toString    
        ]
    }
    
    /**
     * {@inheritDoc} 
     * Note: Will later be automatically generated by the FunctionUnit annotation for function units with only one input port. 
     * Here added only for exploring Xtend's embedded DSL design capabilities
     */
    override void <= (String msg) {
        input <= msg
    }
    
    /**
     * {@inheritDoc} 
     * Note: Will later be automatically generated by the FunctionUnit annotation for function units with only one input port. 
     * Here added only for exploring Xtend's embedded DSL design capabilities
     */
    override void <= (()=>String msgClosure) {
        input <= msgClosure.apply
    }
        
    /**
     * {@inheritDoc} 
     * Note: Will later be automatically generated by the FunctionUnit annotation for function units with only one input port. 
     * Here added only for exploring Xtend's embedded DSL design capabilities
     */
    override -> (de.grammarcraft.xtend.flow.InputPort<String> rightSideFunctionUnitInputPort) {
        output -> rightSideFunctionUnitInputPort
    }
    
    /**
     * {@inheritDoc} 
     * Note: Will later be automatically generated by the FunctionUnit annotation for function units with only one input port. 
     * Here added only for exploring Xtend's embedded DSL design capabilities
     */
    override -> (de.grammarcraft.xtend.flow.OutputPort<String> rightSideFunctionUnitOutputPort) {
        output -> rightSideFunctionUnitOutputPort
    }
    
}