package de.grammarcraft.xtend.annotatedflow

import de.grammarcraft.xtend.flow.annotations.FunctionUnit
import de.grammarcraft.xtend.flow.annotations.InputPort
import de.grammarcraft.xtend.flow.annotations.OutputPort

@FunctionUnit(
    inputPorts = #[
        @InputPort(name="input", type=String)
    ],
    outputPorts = #[
        @OutputPort(name="output", type=String)
    ]
)
class ToUpper {

    override processInput(String msg) {
        output <= msg.toUpperCase;
    }


    /**
     * {@inheritDoc} 
     * Note: Will later be automatically generated by the FunctionUnit annotation for function units with only one input port. 
     * Here added only for exploring Xtend's embedded DSL design capabilities
     */
    override <= (()=>String msgClosure) {
        input <= msgClosure.apply
    }
    
    /**
     * {@inheritDoc} 
     * Note: Will later be automatically generated by the FunctionUnit annotation for function units with only one input port. 
     * Here added only for exploring Xtend's embedded DSL design capabilities
     */
    override <= (String msg) {
        input <= msg
    }
    
}

