- allow on the fly mapping function units declaration a la "val MapIt<String, String> a = new MapIt[toUpper]"
- set up function unit tool set package containing MapIt and other standard FUs
- issue warning about usage of Xtend's pairing operator on function units with more than one input or output port  
- add FunctionUnitInterface to allow function units and their ports be defined as Xtend interface inclusively
  binding semantic requirements and constraints to it 
- promote user's javadoc port documentation to the generated port artifacts
- maybe, @FunctionUnit and @FunctionBoard should be renamed to @FlowOperation and @FlowIntegration respectively; @InputPort and @OutputPort then should be renamed to @Input and @Output respectively

Done
------
- check and improve and user documentation forwarding to class and constructor - constructor as in Xtend 
  no type specification is needed on construction
- get rid FunctionUnitBase class, use interface instead
- rename function unit input port overriding method to "process$<input port name> 
- add getter for OutputPorts and InputPorts to avoid overriding
- generate all operators attached to function unit (e.g. ToLower) required by FuntionUnitWithOnlyOneIN|OUTputPort
- add units tests for all connection operation and forwarding operation options
- add annotation @FunctionBoard which marks integrating function units and has constructor only but no other methods
- logs warnings if a function board has other methods than constructor
  